diff --git a/emp-ot/co.h b/emp-ot/co.h
index 1898d18..d3368bb 100644
--- a/emp-ot/co.h
+++ b/emp-ot/co.h
@@ -39,6 +39,7 @@ class OTCO: public OT<IO> { public:
 		G->get_rand_bn(a);
 		A = G->mul_gen(a);
 		io->send_pt(&A);
+		io->flush(); //flush3
 		AaInv = A.mul(a);
 		AaInv = AaInv.inv();
 
@@ -54,6 +55,7 @@ class OTCO: public OT<IO> { public:
 			res[1] = Hash::KDF(BA[i], i) ^ data1[i];
 			io->send_data(res, 2*sizeof(block));
 		}
+		io->flush(); // flush3
 
 		delete[] BA;
 		delete[] B;
diff --git a/emp-ot/cot.h b/emp-ot/cot.h
index 2a69b59..bfd6aa8 100644
--- a/emp-ot/cot.h
+++ b/emp-ot/cot.h
@@ -33,6 +33,7 @@ class COT : public OT<T>{ public:
 			}
 			io->send_data(pad, 2*sizeof(block)*min(ot_bsize,length-i));
 		}
+		io->flush();
 		delete[] data;
 	}
 
@@ -81,7 +82,7 @@ class COT : public OT<T>{ public:
 		block s;
 		io->recv_block(&s,1);
 		mitccrh.setS(s);
-		io->flush();
+		//io->flush();
 		block pad[ot_bsize];
 		for(int i = 0; i < length; i+=ot_bsize) {
 			memcpy(pad, data+i, min(ot_bsize,length-i)*sizeof(block));
diff --git a/emp-ot/iknp.h b/emp-ot/iknp.h
index b84003e..fa56e60 100644
--- a/emp-ot/iknp.h
+++ b/emp-ot/iknp.h
@@ -137,6 +137,7 @@ class IKNP: public COT<T> { public:
 			xorBlocks_arr(tmp, r, tmp, local_block_size/128);
 			io->send_data(tmp, local_block_size/8);
 		}
+		io->flush();
 
 		sse_trans((uint8_t *)(out), (uint8_t*)t, 128, block_size);
 	}
@@ -164,7 +165,7 @@ class IKNP: public COT<T> { public:
 		block chi[block_size];
 		q[0] = q[1] = makeBlock(0, 0);
 		io->recv_block(&seed2, 1);
-		io->flush();
+		//io->flush();
 
 		for(int i = 0; i < length/block_size; ++i) {
 			uni_hash_coeff_gen<block_size>(chi, seed2);
@@ -232,6 +233,7 @@ class IKNP: public COT<T> { public:
 
 		io->send_block(&x, 1);
 		io->send_block(t, 2);
+		io->flush();
 	}
 };
 
diff --git a/emp-ot/np.h b/emp-ot/np.h
index 3958e4d..c96ea51 100644
--- a/emp-ot/np.h
+++ b/emp-ot/np.h
@@ -67,6 +67,7 @@ class OTNP: public OT<IO> { public:
 			m[1] = Hash::KDF(pk1) ^ data1[i];
 			io->send_data(m, 2*sizeof(block));
 		}
+		io->flush();
 
 		delete[] r;
 		delete[] gr;
@@ -97,6 +98,7 @@ class OTNP: public OT<IO> { public:
 			}
 			io->send_pt(&pk[0]);
 		}
+		io->flush();
 
 		for(int i = 0; i < length; ++i) {
 			io->recv_pt(G, &gr[i]);
